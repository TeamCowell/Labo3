
public class Bunco extends FrameworkJeu {
	private final int NB_TOUR = 6;
	private final int NB_DES_LANCES = 3;
	private int nbTours;
	
	public Bunco(){
		
		creerJeu();
		
	}

	public void jouerPartie() {
		public boolean partieTerminer = false;
		
		if(iterateurJoueur.hasNext() == false){
			while((partieTerminer == false) && (nbTours < NB_TOUR){
				this.effectuerTour();
				
				
			}
			
		
		}
		else{
			System.Out.println("Une erreur s'est produite : il n'y a pas de joueur dans la collection");
		}
		
	}
	
	private void effectuerTour(){
	
			private int scoreTampon;
			private boolean hasNext;
			iterateurJoueur.first();
			iterateurDes.first();
			iterateurDes.brasser();
			scoreTampon = iterateurJoueur.getScore() + stratCalcul.calculerScoreTour(this);
			collectionJoueur.setScore(scoreTampon);
			
			
		while(iterateurJoueur.hasNext()){
			iterateurJoueur.next();
			iterateurDes.next();
			iterateurDes.brasser();
			scoreTampon = iterateurJoueur.getScore() + stratCalcul.calculerScoreTour(this);
			collectionJoueur.setScore(scoreTampon);
		}
		
	}
	
	
	
	
	
	
	
	
	protected void creerJoueur() {
		int nbJoueurs;
		collectionDes = FabriqueCollections.fabriqueCollectionJoueurs(nbJoueurs);
		collectionJoueurs.creerIterateur();
	}

	
	protected void creerDes() {
		int nbDe;
		int nbFaces;
		collectionDes = FabriqueCollections.fabriqueCollectionDes(nbDe, nbFaces);
		collectionDes.creerIterateur();
	}
	protected  void creerStrategie(){
		StrategieJeu stratCalcul = new StrategieBunco();
	
	}
	

	
}
